name: Scan Image
description: Scans a Container Image using workflow-engine

inputs:
  workflow_engine_version:
    description: "The version of workflow-engine to use (note: different versions of the workflow-engine image may not be compatible with this version of the GitHub action)."
    default: "v0.0.1-rc.5"
  image_tag:
    description: The tag of the image being scanned (defaults to the repository name and current commit SHA).
    default: ${{ github.repository }}:${{ github.sha }}
  output_dir:
    description: The output directory to store sbom and scan files
    required: true
  sbom_filename:
    description: "The filename to use for the SBOM (default: sbom.json)"
  grype_filename:
    description: "The filename to use for the Grype scan (default: scan.json)"
  repo_token:
    description: The GITHUB_TOKEN environment variable, used to authentication with the ghcr.io container registry.
    required: true

runs:
  using: composite
  steps:
    # This hack is necessary so long as the workflow-engine image is in a registry requiring
    # authentication. However, there may be ather workarounds if we are using self-hosted runners
    # where we can configure the runner to pre-authenticate with the registry
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.repo_token }}
    - shell: bash
      run: docker pull ghcr.io/cms-enterprise/batcave/workflow-engine:${{ inputs.workflow_engine_version }}
    - shell: bash
      run: |-
        docker run --workdir /github/workspace -e HOME -e CI=true \
          -v "/var/run/docker.sock":"/var/run/docker.sock" \
          -v "$HOME":"/github/home" \
          -v "$(pwd)":"/github/workspace" \
          -v "$(readlink -f ${{ inputs.output_dir }})":"/github/output" \
          ghcr.io/cms-enterprise/batcave/workflow-engine:${{ inputs.workflow_engine_version }} \
          run image-scan \
          --scan-image-target "${{ inputs.image_tag }}" \
          --artifact-directory "/github/output" \
          --sbom-filename "${{ inputs.sbom_filename }}" \
          --grype-filename "${{ inputs.grype_filename }}"
